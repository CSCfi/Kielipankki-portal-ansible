---
# Install wordpress

- name: Install mysql client
  yum:
    name:
      - mysql
    state: present
  async: 60
  poll: 0

- name: Is WordPress downloaded?
  stat: 
    path: "{{ wordpress_directory }}/index.php"
  register: wp_dir

- name: Create WordPress directory
  file: 
    path: "{{ wordpress_directory }}"
    owner: "{{ remote_deploy_user }}"
    group: "{{ remote_deploy_group }}"
    mode: 0755
    state: directory
  when: wp_dir.stat.isdir is not defined

- name: "Download WordPress (version: {{ wordpress_version }})"
  command: /usr/local/bin/wp core download
           --version="{{ wordpress_version }}"
  args:
    chdir: "{{ wordpress_directory }}/"
  become_user: "{{ remote_deploy_user }}"
  when: wp_dir.stat.isdir is not defined

- name: Configure WordPress for DB install user
  command: /usr/local/bin/wp core config
           --path="{{ wordpress_directory }}"
           --dbhost="{{ wp_db_server }}:{{ mysql_port }}"
           --dbname="{{ wp_db_name }}"
           --dbuser="{{ wp_db_install_user }}"
           --dbpass="{{ wp_db_install_password }}"
           --dbprefix="{{ wordpress_db_prefix }}"
  become_user: "{{ remote_deploy_user }}"
  when: wp_dir.stat.isdir is not defined

- name: Is WordPress installed?
  command: /usr/local/bin/wp core is-installed --path="{{ wordpress_directory }}/"
  register: wordpress_is_installed
  ignore_errors: True
  become_user: "{{ remote_deploy_user }}"

- name: Install WordPress tables
  command: /usr/local/bin/wp core install
            --url="{{ wordpress_home_url }}"
            --title="{{ wordpress_site_title }}"
            --admin_user="{{ wordpress_admin_user  }}"
            --admin_password="{{ wordpress_admin_user_pass }}"
            --admin_email="{{ wordpress_admin_email }}"
  args:
    chdir: "{{ wordpress_directory }}/"
  when: wordpress_is_installed is failed
  become_user: "{{ remote_deploy_user }}"

- name: Change to restricted db user
  command: /usr/local/bin/wp core config
           --path="{{ wordpress_directory }}"
           --dbhost="{{ wp_db_server }}:{{ mysql_port }}"
           --dbuser="{{ wp_db_user }}"
           --dbpass="{{ wp_db_password }}"
           --dbname="{{ wp_db_name }}"
           --dbprefix="{{ wordpress_db_prefix }}"
           --force
  become_user: "{{ remote_deploy_user }}"

- name: Set WP to debug mode (red banner)
  command:  /usr/local/bin/wp config set WP_DEBUG true
           --raw
           --path="{{ wordpress_directory }}"
  become_user: "{{ remote_deploy_user }}"

  
# Panel language
- name: Install finnish language pack
  command: /usr/local/bin/wp language core install fi --activate
  args:
    chdir: "{{ wordpress_directory }}"
  become_user: "{{ remote_deploy_user }}"

- name: Hacking Search
  replace:
    path: /var/www/html/wp-content/languages/fi.po
    regexp: "{{ item.search }}"
    replace: "{{ item.replace }}"
    backup: yes
  with_items:
    - {search: '^msgstr "Hae"$', replace: 'msgstr "âž”"'}
    - {search: '^msgstr "Haku &hellip;"$', replace: 'msgstr " "'}
    - {search: '^msgstr "Haku:"$', replace: 'msgstr " "'}
  become_user: "{{ remote_deploy_user }}"

- name: Compile fi.mo localisation file
  command: msgfmt -o fi.mo fi.po
  args:
    chdir: "/var/www/html/wp-content/languages/"
  become_user: "{{ remote_deploy_user }}"

- name: Configure php.ini
  lineinfile:
    path: "/etc/php.ini"
    regexp: "{{ item.parameter }} ="
    line: "{{ item.parameter }} = {{ item.value }}"
  loop: "{{ php_settings }}"
